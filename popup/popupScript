//if check box selected turn on filter
//if unchecked run show all

//reverse button? ONLY show those filtered

//grab text entered from input to add to a list.

//each list item gets an "x" to remove

window.addEventListener('load', function () {
	getValues();


	let AddKeyButton = document.querySelector('#AddKeyButton');
	let keywordInput = document.querySelector('#keywordInput');

	let list = document.querySelector('.keyword-list');

	let keywordArray = [];

	

	function makeList(array) {
		// Establish the array which acts as a data source for the list
		let keywordArrayList = keywordArray;

		// Set up a loop that goes through the items in listItems one at a time
		let numberOfListItems = keywordArrayList.length;
	
		for (let i = 0; i < numberOfListItems; ++i) {

			let li = document.createElement('li');

			// Add the item text
			li.innerHTML = "<li class='keyword-list__item'>" + keywordArrayList[i] + "<a class='close-item' href=''>x</a></li>";

			list.appendChild(li)
			keywordInput.value = '';
		}
	}
	





	AddKeyButton.addEventListener('click', function () {
		let keyword = keywordInput.value;
		let li = document.createElement('li');
		
		// Add the item text
		li.innerHTML = "<li class='keyword-list__item'>" + keywordArrayList[i] + "<a class='close-item' href=''>x</a></li>";
		list.appendChild(li)

		keywordArray.push(keyword);
		keywordInput.value = '';

		saveChanges();
	});

	keywordInput.addEventListener("keydown", function (event) {
		if (event.keyCode === 13) {	// Number 13 is the "Enter" key on the keyboard
			event.preventDefault();
			AddKeyButton.click();
		}
	});

	let onSwitch = document.getElementById("onSwitch")
	let getValueButton = document.getElementById("getValues")

	onSwitch.addEventListener('change', function () {
		saveChanges();
	});

	getValueButton.addEventListener('click', function () {
		getValues();
	});

	function saveChanges() {
		chrome.storage.sync.set({
			'on': onSwitch.checked,
			'keywords': keywordArray,
			'reverse': false
		}, function () {
			console.log('succesfully saved');
		});
	}

	function getValues() {
		chrome.storage.sync.get(['on', 'keywords', 'reverse'], function (data) {
			console.log(data);
			keywordArray = data.keywords;	
			makeList(keywordArray);		
		});
	}



	// // Get a value.
	// if ($('#myonoffswitch').is(':checked')) {
	//     localStorage.mydata = 'y';
	// } else {
	//     localStorage.mydata = 'n';
	// }

	// Save it using the Chrome extension storage API.
	//   chrome.storage.sync.set({
	//       'value': localStorage.mydata
	//   }, function () {

	//   });


	// Save it using the Chrome extension storage API.



	//   chrome.storage.onChanged.addListener(function(changes, namespace) {
	// 	  for (key in changes) {
	// 		var storageChange = changes[key];
	// 		console.log('Storage key "%s" in namespace "%s" changed. ' +
	// 					'Old value was "%s", new value is "%s".',
	// 					key,
	// 					namespace,
	// 					storageChange.oldValue,
	// 					storageChange.newValue);
	// 	  }
	// 	});
});



